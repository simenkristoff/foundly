@startuml
package Model <<Folder>> {
    class Item {
    long id
    String title
    String description
    State state
    String email
    String phone
    String image
    LocalDateTime date

    }
}

package json <<Folder>> {

    class ItemSerializer {
        flightNumber : Integer
        departureTime : Date
        Item serialize()
    }

    class ItemDeserializer {
        flightNumber : Integer
        departureTime : Date
        Item deserialize()
    }
}

package dataaccess <<Folder>> {

    interface ImageDataAccess {
        void upload(File)

    }

    class ImageDataAccessObject {
        final String baseUrlString
        RestTemplate restTemplate
        ObjectMapper objectMapper



    }

    ImageDataAccess <|.. ImageDataAccessObject

    interface ItemDataAccess {
        Collection<Item> getAll()
        Item get(long)
        void delete(long)
        boolean insert(Item)
    }

    class ItemDataAccessObject {
        final String baseUrlString
        RestTemplate restTemplate
        String getRequestUrl(final String)
    }

    ItemDataAccess <|.. ItemDataAccessObject

}

package restAPI <<Cloud>> {

}


ImageDataAccess -right-> restAPI
ItemDataAccess -right-> restAPI
note on link #lightgray: restAPI-diagram in separate plantUML

ItemDataAccess -up-> Item : uses
Model -down-> json : uses
@enduml